{"version":3,"sources":["CounterValueComponent.js","CounterComponent.js","App.js","reportWebVitals.js","index.js"],"names":["CounterValueComponent","props","React","useState","countValue","setCountValue","useEffect","className","style","fontFamily","fontSize","fontWeight","CounterComponent","counter","setCounter","isLoading","setIsLoading","setData","value","a","myHeaders","Headers","append","raw","JSON","stringify","fetch","method","headers","body","redirect","then","response","text","result","catch","error","console","log","decrement","increment","border","height","width","borderWidth","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","borderColor","color","onClick","textAlign","type","onChange","val","target","inputValue","borderTopRightRadius","borderBottomRightRadius","App","paddingTop","paddingLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50405236.chunk.js","sourcesContent":["import React from \"react\"\nfunction CounterValueComponent(props) {\n  \n  const [countValue, setCountValue ] = React.useState(props.countValue || 1)\n  const getData = async () => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://interview-8e4c5-default-rtdb.firebaseio.com/front-end/counter1.json\", requestOptions)\n      .then(response => response.text())\n      .then(result =>{ \n        setCountValue(result || props.countValue)\n        })\n      .catch(error => console.log('error', error));\n  }\n  React.useEffect(() => {\n    setCountValue(props.countValue)\n    //  getData()\n  }, [props.countValue])\n  return (\n    <div className=\"App\">\n       <h3 style={{fontFamily:'sans-serif', fontSize:15, }}>Counter value</h3>\n       <h4 style={{fontFamily:'sans-serif', fontSize:15, fontWeight: 'normal', }}>{countValue}</h4>  \n    </div>\n  );\n}\n\nexport default CounterValueComponent;\n","import React from \"react\"\nimport CounterValueComponent from \"./CounterValueComponent\";\nfunction CounterComponent(\n) {\n  const [counter,setCounter]= React.useState(1)\n  const [isLoading,setIsLoading]= React.useState(false)\n  const setData = async (value) => {\n    setIsLoading(true)\n    var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\n  \"counter1\": value\n});\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://interview-8e4c5-default-rtdb.firebaseio.com/front-end.json\", requestOptions)\n  .then(response => { \n    setIsLoading(false)\n    response.text()\n  } )\n  .then(result => {\n    setIsLoading(false)\n  })\n  .catch(error => {\n    setIsLoading(false)\n    console.log('error', error)\n  });\n\n  }\n  React.useEffect(() => {\n    setData()\n  }, [])\n  const decrement = async () => {\n    if (counter===1)\n    return\n\n    await setData(counter - 1)\n    setCounter(counter - 1)\n    \n  }\n  const increment = async () => {\n    if (counter===1000)\n    return\n\n    await setData(counter +1)\n    setCounter(counter + 1)\n   \n  }\n\n\n  return (\n    <div className=\"App\">\n      \n      { \n        isLoading &&\n        \n<div>\n<div className=\"loader\" >\n        </div>\n<h2 style={{fontFamily:'sans-serif', border:1,fontWeight: 'normal',fontSize: 12 }}>Saving counter value</h2>\n</div>\n      }\n       <div className=\"button__wrapper\">\n        <button style={{height:50, width:50, borderWidth:0.5\n        , fontSize: 16, borderTopLeftRadius:10, borderBottomLeftRadius:10,\n        backgroundColor:'white',fontFamily:'sans-serif',\n        borderColor:'#AB4E52', color: '#AB4E52',fontWeight: 'bold'\n      }} onClick={decrement}>-</button>\n        <input style={{height:46,width:50, fontSize:16, textAlign:'center', \n        backgroundColor:'\t#FFE4E1',borderColor:'#AB4E52', color: '#AB4E52',borderWidth:0.5,\n        fontWeight: 'bold',fontFamily:'sans-serif'\n      }} \n        type='text' value={counter} onChange={async(val)=> {\n             console.log(val.target.value, 'hi')\n             const inputValue= val.target.value\n             if(inputValue<1 || inputValue>1000)\n             return\n\n             await setData(inputValue)\n             setCounter(inputValue)\n             \n        }}/>\n        <button style={{height:50, width:50,borderColor:'#AB4E52', borderWidth:1\n        , fontSize: 16, borderTopRightRadius:10, borderBottomRightRadius:10,\n        backgroundColor: '#AB4E52', color: 'white', fontWeight: 'bold',fontFamily:'sans-serif'\n      }}\n        onClick={increment}>+</button>\n      </div> \n      <CounterValueComponent countValue={counter}/>\n    </div>\n  );\n}\n\nexport default CounterComponent;\n","import CounterComponent from \"./CounterComponent\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\" style={ \n    {\n      paddingTop:100,\n      paddingLeft:100,\n    }\n    }>\n       \n       <CounterComponent />\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}